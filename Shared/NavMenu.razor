@inject Blazored.LocalStorage.ILocalStorageService localStore

@*@inject IJSRuntime JS*@
@inject NavigationManager NavManager

<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark @(ColorTheme == "Light" ? "light_nav" : "dark_nav") box-shadow mb-3 fixed-top">
    @*bg-dark*@
    <div class="container">
        <a class="navbar-brand @(ColorTheme == "Light" ? "light_general_text" : "dark_general_text") cursor-pointer" asp-area="" asp-page="/Index" href="/" Match="NavLinkMatch.All">Contact The Jeff</a>
        <button class="navbar-toggler" @onclick="ToggleNavMenu" type="button" data-toggle="collapse" data-target=".navbar-collapse" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="@NavMenuCssClass navbar-collapse d-sm-inline-flex flex-sm-row-reverse " @onclick="CollapseNavMenu">
            <ul class="navbar-nav flex-grow-1  justify-content-around">
                <!--TEST TO SEE IF I CAN CONTROL THE COLOR THEMES WHEN USING NAVLINK TAG-->
                <li class="nav-item text-center my-auto">
                    <NavLink href="/blog" class="nav-link ">
                        <span class="@(ColorTheme == "Light" ? "light_general_text" : "dark_general_text")">Blog</span>
                    </NavLink>
                </li>
                <li class="nav-item text-center my-auto">
                    <NavLink href="/coding" class="nav-link ">
                        <span class="@(ColorTheme == "Light" ? "light_general_text" : "dark_general_text")">Coding</span>
                    </NavLink>
                </li>
                <li class="nav-item text-center my-auto">
                    <NavLink href="/bounties" class="nav-link ">
                        <span class="@(ColorTheme == "Light" ? "light_general_text" : "dark_general_text")">Bounties</span>
                    </NavLink>
                </li>
                <li class="nav-item text-center my-auto">
                    <NavLink href="/resume" class="nav-link ">
                        <span class="@(ColorTheme == "Light" ? "light_general_text" : "dark_general_text")">Resume</span>
                    </NavLink>
                </li>
                <!--TODO: 10/04/21 LET'S SEE IF THIS WORKS...-->
                @if (DisabledContact == false) {
                    <li class="nav-item text-center my-auto">
                        <NavLink href="/contact" class="nav-link" > @*@onclick="ClearContactData"*@
                            <span class="@(ColorTheme == "Light" ? "light_general_text" : "dark_general_text")">Contact</span>
                        </NavLink>
                    </li>
                } else {
                    <li class="nav-item text-center my-auto">
                        <NavLink class="nav-link active cursor-invalid" disabled>
                            <span class="@(ColorTheme == "Light" ? "light_general_text" : "dark_general_text")">Contact</span>
                        </NavLink>
                    </li>
                }
                <!--THEME TOGGLE SWITCH-->
                <li class="nav-item text-center my-auto py-2">
                    <input type="checkbox" class="btn-check d-none" id="btn-check" autocomplete="off" checked="@ColorThemeInitiallyChecked" @onchange="eventArgs => {ToggleThemeSwitch(eventArgs.Value.ToString() );}">
                    <!--NOTE: THIS BUTTON'S STYLE HAS BEEN ALTERED TO PREVENT ITS BORDER FROM CLIPPING W/ CONTACT OUTLINE WHEN NAVBAR IS COLLAPSED-->
                    <label class="btn my-auto @(ColorTheme == "Light" ? "light_general_text btn-outline-light r-b-corner-dark-shadow" : "dark_general_text btn-outline-light r-b-corner-light-shadow") cursor-pointer" for="btn-check" style="padding: 0.150rem .75rem !important;">
                        @ColorThemeDisplayText <span class="invisible">@(ColorTheme == "Light" ? "" : "i")</span>Theme
                    </label>
                    <!--PREVIOUS VERSION OF THEME CHECKBOX-->
                    <!--<div class="form-check form-switch nav-link">
            <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" checked="@ColorThemeInitiallyChecked" @onchange="eventArgs => {ToggleThemeSwitch(eventArgs.Value.ToString() );}">
            <label class="form-check-label @(ColorTheme == "Light" ? "light_general_text" : "dark_general_text")" for="flexSwitchCheckDefault">@ColorThemeDisplayText Theme</label>-->
                    @*@ColorThemeDisplayText*@
                    <!--</div>-->
                </li>
            </ul>
        </div>
    </div>
</nav>


@*@code {
        bool collapseNavMenu = true;

        string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

        void ToggleNavMenu() {
            collapseNavMenu = !collapseNavMenu;
        }

        void CollapseNavMenu() {
            collapseNavMenu = true;
        }
    }*@


<!--
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">BlazoredPortfolio</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li>
    </ul>
</div>
-->
@*@code {
        private bool collapseNavMenu = true;

        private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

        private void ToggleNavMenu() {
            collapseNavMenu = !collapseNavMenu;
        }
    }*@
